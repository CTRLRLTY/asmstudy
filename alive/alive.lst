     1                                  ; alive.asm
     2                                  extern printf
     3                                  section .data
     4 00000000 48656C6C6F2C20776F-       msg1      db    "Hello, world!",10,0      ; string with NL and 0
     4 00000009 726C64210A00       
     5                                    msg1Len   equ   $-msg1-1                  ; measure the length minus the nullbyte
     6 0000000F 416C69766520616E64-       msg2      db    "Alive and Kicking!",10,0 ; string with NL and 0
     6 00000018 204B69636B696E6721-
     6 00000021 0A00               
     7                                    msg2Len   equ   $-msg2-1                  ; measure the length minus the nullbyte
     8 00000023 65010000                  radius    dd    357
     9 00000027 1F85EB51B81E0940          pi        dq    3.14
    10 0000002F 256C660A00                fmtflt    db    "%lf",10,0
    11 00000034 25640A00                  fmtint    db    "%d",10,0
    12                                  section .bss
    13                                  section .text
    14                                    global main
    15                                  main:
    16 00000000 55                        push      rbp                             ; function prologue
    17 00000001 4889E5                    mov       rbp,rsp                         ; function prologue
    18 00000004 B801000000                mov       rax, 1                          ; 1 = write
    19 00000009 BF01000000                mov       rdi, 1                          ; 1 = to stdout
    20 0000000E 48BE-                     mov       rsi, msg1
    20 00000010 [0000000000000000] 
    21 00000018 BA0E000000                mov       rdx, msg1Len
    22 0000001D 0F05                      syscall
    23 0000001F B801000000                mov       rax, 1                          ; 1 = write
    24 00000024 BF01000000                mov       rdi, 1                          ; 1 = to stdout
    25 00000029 48BE-                     mov       rsi, msg2
    25 0000002B [0F00000000000000] 
    26 00000033 BA13000000                mov       rdx, msg2Len
    27 00000038 0F05                      syscall
    28 0000003A B800000000                mov       rax,0                           ; No floating point used
    29 0000003F 48BF-                     mov       rdi, fmtint
    29 00000041 [3400000000000000] 
    30 00000049 488B3425[23000000]        mov       rsi, [radius]
    31 00000051 E8(00000000)              call      printf
    32 00000056 B801000000                mov       rax, 1                          ; One floating point is used
    33 0000005B 48BF-                     mov       rdi, fmtflt
    33 0000005D [2F00000000000000] 
    34 00000065 F30F7E0425-               movq      xmm0, [pi]
    34 0000006A [27000000]         
    35 0000006E E8(00000000)              call      printf
    36 00000073 4889EC                    mov       rsp,rbp                         ; function epilogue
    37 00000076 5D                        pop       rbp                             ; function epilogue
    38 00000077 C3                        ret
    39                                  
